# This is an example .env.server file.
# Duplicate this file as .env.server and fill in your actual credentials.
# NEVER commit your .env.server file with real secrets to version control.

# Wasp settings
WASP_WEB_CLIENT_URL="http://localhost:3000" # For dev; Netlify URL for prod
WASP_SERVER_URL="http://localhost:3001" # For dev; Railway URL for prod

# Database connection string (PostgreSQL)
# Wasp typically handles this if you're using its built-in DB management or Railway add-on.
# If you are using an external PostgreSQL database, uncomment and set this.
# DATABASE_URL="postgresql://USER:PASSWORD@HOST:PORT/DATABASE"

# Google OAuth credentials
# Obtain these from Google Cloud Console: https://console.cloud.google.com/apis/credentials
GOOGLE_CLIENT_ID="YOUR_GOOGLE_CLIENT_ID"
GOOGLE_CLIENT_SECRET="YOUR_GOOGLE_CLIENT_SECRET"

# Email/Password Auth (Wasp handles this internally if enabled)
# No specific env vars needed here unless you customize JWT secret, etc.
# JWT_SECRET="A_VERY_STRONG_RANDOM_SECRET_KEY_AT_LEAST_32_CHARS_LONG" # Wasp generates one if not set

# Anthropic Claude API Key
# Obtain from Anthropic Console: https://console.anthropic.com/
CLAUDE_API_KEY="YOUR_CLAUDE_API_KEY"
# You can also specify model names here if you want to configure them via env vars
# CLAUDE_PREMIUM_MODEL="claude-3-5-sonnet-20240620"
# CLAUDE_BASIC_MODEL="claude-3-haiku-20240307"

# Stripe API Keys
# Obtain from Stripe Dashboard: https://dashboard.stripe.com/apikeys
STRIPE_SECRET_KEY="sk_test_YOUR_STRIPE_SECRET_KEY" # Use test key for development
STRIPE_PUBLISHABLE_KEY="pk_test_YOUR_STRIPE_PUBLISHABLE_KEY" # Use test key for development
STRIPE_WEBHOOK_SECRET="whsec_YOUR_STRIPE_WEBHOOK_SECRET" # For verifying webhook events

# Stripe Price IDs (create these in your Stripe dashboard)
# Example:
# STRIPE_BASIC_PLAN_PRICE_ID="price_xxxxxxxxxxxxxx_basic"
# STRIPE_PREMIUM_PLAN_PRICE_ID="price_xxxxxxxxxxxxxx_premium"

# Google Maps API Key (for Geocoding and Places Autocomplete)
# Obtain from Google Cloud Console: https://console.cloud.google.com/apis/credentials
# Ensure Geocoding API and Places API are enabled.
GOOGLE_MAPS_API_KEY="YOUR_GOOGLE_MAPS_API_KEY"

# SendGrid API Key (for transactional emails)
# Obtain from SendGrid Dashboard: https://app.sendgrid.com/settings/api_keys
SENDGRID_API_KEY="YOUR_SENDGRID_API_KEY"
# Define default sender email if not hardcoded or taken from main.wasp
# SENDGRID_FROM_EMAIL="noreply@yourdomain.com"

# Swiss Ephemeris Data Path (Optional)
# If sweph-js cannot find ephemeris files automatically, you might need to set this.
# Usually, sweph-js bundles or downloads them. Check its documentation.
# SWEPH_PATH="/path/to/your/ephemeris/files"

# Logging Level (e.g., 'info', 'warn', 'error', 'debug')
LOG_LEVEL="info"

# Application URL (used for generating absolute URLs in emails, etc.)
# For development, Wasp uses WASP_WEB_CLIENT_URL. For production, set this explicitly.
# APP_URL="https://www.astroinsight.com"

# Node environment
NODE_ENV="development" # Set to "production" in deployed environments